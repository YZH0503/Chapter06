/*
Filename:T6_55.cpp
Author:  Zehong Yang
E-mail:  2579510685@qq.com
Date:    Apl 17th, 2022
College: School of Computer Science and InformationEngineering
Function:C++11的随机数：掷双骰子游戏的改进
*/
#include <iostream>
#include <ctime>
#include <random>

using namespace std;

unsigned int rollDice();

int main()
{
	enum Status { CONTINUE, WON, LOST };

	default_random_engine(static_cast<unsigned int>(time(0)));
	uniform_int_distribution<unsigned int> random(1, 6);

	unsigned int myPoint = 0;
	Status gameStatus = CONTINUE;
	unsigned int sumOfDice = rollDice();

	switch (sumOfDice)
	{
	case 7:
	case 11:
		gameStatus = WON;
		break;
	case 2:
	case 3:
	case 12:
		gameStatus = LOST;
		break;
	default:
		gameStatus = CONTINUE;
		myPoint = sumOfDice;
		cout << "Point is " << myPoint << endl;
		break;
	}

	while (CONTINUE == gameStatus)
	{
		sumOfDice = rollDice();

		if (sumOfDice == myPoint)
		{
			gameStatus = WON;
		}
		else if (sumOfDice == 7)
		{
			gameStatus = LOST;
		}
	}
	if (WON == gameStatus)
		cout << "Player wins" << endl;
	else
		cout << "Player loses" << endl;

	return gameStatus;
}

unsigned int rollDice()
{
	unsigned int die1 = 1 + rand() % 6;
	unsigned int die2 = 1 + rand() % 6;

	unsigned int sum = die1 + die2;

	cout << "Player rolled " << die1 << "+" << die2 << "=" << sum << endl;
	return sum;
}
